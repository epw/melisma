(eval-when (:compile-toplevel :load-toplevel :execute)
  (unless (find-package :eric)
    (ql:quickload "eric"))
  (unless (find-package :melisma)
    (load (compile-file "/home/eric/projects/melisma/melisma.lisp"))
    (load (compile-file "/home/eric/projects/melisma/melisma-instruments.lisp"))))

(defpackage #:fugue
  (:use #:cl #:melisma #:melisma-instruments)
  (:export #:main))

(in-package #:fugue)

(defun subject (v)
  (macrolet ((m (degree &optional (duration 1) (mode :major))
	       `(n v (typed-degree ,mode ,degree) ,duration)))
    (m 5)
    (m 5 1/2)
    (m 5 1/2)
    (m 4 1/2)
    (m 3)
    (m 4 1/2)
    (m 3)
    (m 1)
    (m 1 2)
    (m 1)
    (m 3)
    (m 4)
    (m 3)
    (m 3)
    (m 4)
    (n v (octaves 1 a-first))))

(defun fugue ()
  (arrange-music 130 ((m (make-voice :instrument +acoustic-grand+ :octave 1 :offset-note /D))
  		      (b (make-voice :instrument +acoustic-grand+)))
    (subject m)
;    (voice-offset-set (m /G)
;      (subject m))
    ))

(lilypond-main (fugue))
